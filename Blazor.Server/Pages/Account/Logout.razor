@page "/logout"

@*@using Microsoft.AspNetCore.Identity
@using Microsoft.AspNetCore.Mvc
@using System.Security.Policy

@model LogoutModel
@{
    ViewData["Title"] = "Log out";
}

<header>
    <h1>@ViewData["Title"]</h1>
    @{
        if (User.Identity.IsAuthenticated)
        {
            <form class="form-inline" asp-area="Identity" asp-page="/Account/Logout" asp-route-returnUrl="@Url.Page("/", new { area = "" })" method="post">
                <button type="submit" class="nav-link btn btn-link text-dark">Click here to Logout</button>
            </form>
        }
        else
        {
            <p>You have successfully logged out of the application.</p>
        }
    }
</header>*@

@code {
    //public class LogoutModel : PageModel
    //{
    //    private readonly SignInManager<IdentityUser> _signInManager;
    //    private readonly ILogger<LogoutModel> _logger;

    //    public LogoutModel(SignInManager<IdentityUser> signInManager, ILogger<LogoutModel> logger)
    //    {
    //        _signInManager = signInManager;
    //        _logger = logger;
    //    }

    //    public async Task<IActionResult> OnPost(string returnUrl = null)
    //    {
    //        await _signInManager.SignOutAsync();
    //        _logger.LogInformation("User logged out.");
    //        if (returnUrl != null)
    //        {
    //            return LocalRedirect(returnUrl);
    //        }
    //        else
    //        {
    //            // This needs to be a redirect so that the browser performs a new
    //            // request and the identity for the user gets updated.
    //            return RedirectToPage();
    //        }
    //    }
    //}
}
