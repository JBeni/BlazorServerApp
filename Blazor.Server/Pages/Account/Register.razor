@page "/register"

<div class="auth-page">
    <div class="container page">
        <div class="row">
            <div class="col-md-6 offset-md-3 col-xs-12">
                <h1 class="text-xs-center">Sign up</h1>
                <p class="text-xs-center">
                    <a href="/signin">Have an account?</a>
                </p>
                @if (ShowLoginFailed)
                {
                    <div class="alert alert-danger">
                        Register attempt failed.
                    </div>
                }
                <form>
                    <fieldset class="form-group">
                        <input class="form-control form-control-lg" type="text" placeholder="First Name" @bind="_registerCommand.FirstName" />
                    </fieldset>
                    <fieldset class="form-group">
                        <input class="form-control form-control-lg" type="text" placeholder="Last Name" @bind="_registerCommand.LastName" />
                    </fieldset>

                    <fieldset class="form-group">
                        <input class="form-control form-control-lg" type="email" placeholder="Email" @bind="_registerCommand.Email" />
                    </fieldset>
                    <fieldset class="form-group">
                        <input class="form-control form-control-lg" type="password" placeholder="Password" @bind="@_registerCommand.Password" />
                    </fieldset>
                    <fieldset class="form-group">
                        <input class="form-control form-control-lg" type="password" placeholder="Confirm Password" @bind="@_registerCommand.ConfirmPassword" />
                    </fieldset>
                    <button class="btn btn-lg btn-primary pull-xs-right" type="button" @onclick="@RegisterUser">
                        Register
                    </button>
                </form>
            </div>
        </div>
    </div>
</div>

@code {
    [Inject] private AppState _appState { get; set; }
    [Inject] public NavigationManager? _urlNavigationManager { get; set; }

    protected RegisterCommand _registerCommand { get; set; } = new RegisterCommand();
    protected bool ShowLoginFailed { get; set; }

    protected async Task RegisterUser()
    {
        if (!_registerCommand.Password.Equals(_registerCommand.ConfirmPassword))
        {
            ShowLoginFailed = true;
            return;
        }

        await _appState.Register(_registerCommand);

        if (_appState.IsLoggedIn)
        {
            _urlNavigationManager.NavigateTo("/");
        }
        else
        {
            ShowLoginFailed = true;
        }
    }
}
