@page "/product/add"
@page "/product/edit/{Id:int}"

@inject ProductService ProductService
@inject NavigationManager NavManager

<h1>@Title Product</h1>
<hr />

<EditForm Model="@product" OnValidSubmit="SaveProduct">
    <DataAnnotationsValidator />
    <div class="mb-3">
        <label for="Name" class="form-label">Name</label>
        <div class="col-md-4">
            <InputText class="form-control" @bind-Value="product.Name" />
        </div>
        <ValidationMessage For="@(() => product.Name)" />
    </div>
    <div class="mb-3">
        <label for="Description" class="form-label">Description</label>
        <div class="col-md-4">
            <InputText class="form-control" @bind-Value="product.Description" />
        </div>
        <ValidationMessage For="@(() => product.Description)" />
    </div>
    <div class="mb-3">
        <label for="Brand" class="form-label">Brand</label>
        <div class="col-md-4">
            <InputSelect class="form-control" @bind-Value="product.Brand">
                <option value="">-- Select Brand --</option>
                <option value="Nike">Nike</option>
                <option value="Adidas">Adidas</option>
                <option value="Reebok">Reebok</option>
                <option value="Puma">Puma</option>
            </InputSelect>
        </div>
        <ValidationMessage For="@(() => product.Brand)" />
    </div>
    <div class="mb-3">
        <label for="Price" class="form-label">Price</label>
        <div class="col-md-4">
            <InputNumber class="form-control" @bind-Value="product.Price" />
        </div>
        <ValidationMessage For="@(() => product.Price)" />
    </div>
    <div class="mb-3">
        <label for="Amount" class="form-label">Amount</label>
        <div class="col-md-4">
            <InputNumber class="form-control" @bind-Value="product.Amount" />
        </div>
        <ValidationMessage For="@(() => product.Amount)" />
    </div>
    <div class="mb-3">
        <label for="Size" class="form-label">Size</label>
        <div class="col-md-4">
            <InputSelect class="form-control" @bind-Value="product.SizeId">
                <option value="0">-- Select Size --</option>
                @foreach (var size in sizeList)
                {
                    <option value="@size.Id">@size.Name</option>
                }
            </InputSelect>
        </div>
        <ValidationMessage For="@(() => product.SizeId)" />
    </div>
    <div class="mb-3">
        <label for="Colour" class="form-label">Colour</label>
        <div class="col-md-4">
            <InputSelect class="form-control" @bind-Value="product.ColourId">
                <option value="0">-- Select Size --</option>
                @foreach (var colour in colourList)
                {
                    <option value="@colour.Id">@colour.Name</option>
                }
            </InputSelect>
        </div>
        <ValidationMessage For="@(() => product.ColourId)" />
    </div>
    <div class="form-group">
        <button type="submit" class="btn btn-primary">Save</button>
        <button type="button" class="btn btn-light" @onclick="Cancel">Cancel</button>
    </div>
</EditForm>

@code {
    [Parameter]
    public int Id { get; set; }
    protected string Title = "Add";

    public ProductResponse product = new();
    protected List<SizeResponse> sizeList = new();
    protected List<ColourResponse> colourList = new();

    protected override void OnInitialized()
    {
        GetSizeList();
        GetColourList();
    }

    protected override void OnParametersSet()
    {
        if (Id != 0)
        {
            Title = "Edit";
            product = ProductService.GetProduct(Id);
        }
    }

    protected void GetSizeList()
    {
        sizeList = ProductService.GetSizesData();
    }

    protected void GetColourList()
    {
        colourList = ProductService.GetColoursData();
    }

    protected async Task SaveProduct()
    {
        if (product.Id != 0)
        {
            await ProductService.UpdateProduct(product);
        }
        else
        {
            await ProductService.AddProduct(product);
        }
        Cancel();
    }

    public void Cancel()
    {
        NavManager.NavigateTo("/product");
    }
}
