@page "/todo"

<PageTitle>Todo Items</PageTitle>

<h3>Todo (@todos.Count(todo => !todo.IsCompleted))</h3>

<br/>
<fieldset class="form-group">
    <input class="form-control form-control-lg" type="text" placeholder="Title" @bind="_todo.Title" />
</fieldset>
<button @onclick="SaveTodo">Save Todo</button>

<br/><br/>

<table class="table table-striped align-middle table-bordered">
    <thead class="table-success">
        <tr class="text-center">
            <th>ID</th>
            <th>Title</th>
            <th>IsCompleted</th>
            <th>Actions</th>
        </tr>
    </thead>
    <tbody>
        @foreach (var item in todos)
        {
            <tr class="text-center">
                <td>@item.Id</td>
                <td>@item.Title</td>
                <td>@item.IsCompleted</td>
                <td>
                    @if (!@item.IsCompleted)
                    {
                        <button @onclick="(() => CompleteTodo(item.Id))">Complete Task</button>
                    }
                    else
                    {
                        <p>Todo Completed</p>
                    }
                </td>
            </tr>
        }
    </tbody>
</table>

@code {
    [Inject] protected TodoService? TodoService { get; set; }
    [Inject] public NavigationManager? _urlNavigationManager  { get; set; }

    protected List<TodoResponse> todos = new();
    protected TodoResponse _todo = new();

    protected override async Task OnInitializedAsync()
    {
        await GetTodos();
    }

    protected async Task GetTodos()
    {
        todos = TodoService.GetAllTodos();
    }

    protected async void SaveTodo()
    {
        if (_todo.Id == 0)
        {
            if (!string.IsNullOrWhiteSpace(_todo.Title))
            {
                await TodoService.CreateTodo(_todo);
            }
        }
        await GetTodos();
    }

    protected async void CompleteTodo(int todoId)
    {
        if (todoId != 0)
        {
            await TodoService.CompleteTodo(todoId);
        }
        await GetTodos();
    }

    public void Cancel()
    {
        _urlNavigationManager.NavigateTo("/todo");
    }
}
